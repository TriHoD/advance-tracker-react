[{"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/index.js":"1","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/App.js":"2","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Detail/Details.jsx":"3","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Detail/style.js":"4","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/style.js":"5","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/Main.jsx":"6","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/style.js":"7","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/Form/Form.jsx":"8","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/Form/style.js":"9","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/List/List.jsx":"10","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/List/style.js":"11","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/context/context.js":"12","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/context/contextReducer.js":"13","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/constants/categories.js":"14","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/utils/formatDate.js":"15","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/useTransactions.js":"16","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Snackbar/Snackbar.jsx":"17","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Snackbar/styles.js":"18","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/InforCard.jsx":"19"},{"size":437,"mtime":1610260039560,"results":"20","hashOfConfig":"21"},{"size":1035,"mtime":1610403788221,"results":"22","hashOfConfig":"21"},{"size":709,"mtime":1610405308389,"results":"23","hashOfConfig":"21"},{"size":250,"mtime":1609401949074,"results":"24","hashOfConfig":"21"},{"size":641,"mtime":1609401697034,"results":"25","hashOfConfig":"21"},{"size":1249,"mtime":1610410817406,"results":"26","hashOfConfig":"21"},{"size":543,"mtime":1609402590989,"results":"27","hashOfConfig":"21"},{"size":5185,"mtime":1610410242020,"results":"28","hashOfConfig":"21"},{"size":251,"mtime":1610406581827,"results":"29","hashOfConfig":"21"},{"size":1574,"mtime":1609823901859,"results":"30","hashOfConfig":"21"},{"size":399,"mtime":1609406465066,"results":"31","hashOfConfig":"21"},{"size":1395,"mtime":1610408943967,"results":"32","hashOfConfig":"21"},{"size":694,"mtime":1610408284866,"results":"33","hashOfConfig":"21"},{"size":1703,"mtime":1609818899397,"results":"34","hashOfConfig":"21"},{"size":358,"mtime":1609823756471,"results":"35","hashOfConfig":"21"},{"size":1124,"mtime":1609830254114,"results":"36","hashOfConfig":"21"},{"size":865,"mtime":1610410067862,"results":"37","hashOfConfig":"21"},{"size":211,"mtime":1610409475178,"results":"38","hashOfConfig":"21"},{"size":478,"mtime":1610410893989,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1agz637",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/index.js",[],["80","81"],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/App.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Detail/Details.jsx",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Detail/style.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/style.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/Main.jsx",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/style.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/Form/Form.jsx",["82"],"import React, { useState, useContext, useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\n\nimport { ExpenseTrackerContext } from '../../../context/context'\nimport formatDate from '../../../utils/formatDate';\nimport { incomeCategories, expenseCategories }  from '../../../constants/categories';\nimport useStyles from './style';\nimport CustomizedSnackbar from '../../Snackbar/Snackbar';\n\nconst intitState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n\n}\nconst Form = () => {\n\n    const classes = useStyles();\n    const { createTransaction } = useContext(ExpenseTrackerContext);\n    const [formData, setFormData] = useState(intitState);\n    const [ open, setOpen ] = useState(false);\n    const { segment } = useSpeechContext();  \n\n    const addTransaction = () => {\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return ;\n        \n        const transaction = { ...formData, id: uuidv4(), amount: Number(formData.amount), }\n        setOpen(true);\n        createTransaction(transaction)\n        setFormData(intitState);\n    }\n\n    useEffect(() => {\n        if(segment) {\n            if(segment.intent.intent === 'add_expense') {\n                setFormData({ ...formData, type: 'Expense' });\n            } else if (segment.intent.intent === 'add_income') {\n                setFormData({ ...formData, type: 'Income' });\n            } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n                return createTransaction();\n            } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n                return setFormData(intitState);\n            }\n\n            segment.entities.forEach((e) => {\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\n                switch (e.type) {\n                    case 'amount':\n                        setFormData({ ...formData, amount: e.value });\n                        break;\n                    case 'category':\n                        if(incomeCategories.map((iC) => iC.type).includes(category)) {\n                            setFormData({ ...formData, type: 'Income', category });\n                        } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\n                            setFormData({ ...formData, type: 'Expense', category });\n                        }\n                        break;\n                    case 'date':\n                        setFormData({ ...formData, date: e.value });\n                        break;\n                    default:\n                        break;\n                }\n            })\n\n            if (segment.isFinal && formData.amount && formData.type && formData.category && formData.date) {\n                addTransaction();\n            }\n\n        }\n    },[segment])\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n    return (\n        <Grid container spacing={2}>\n            <CustomizedSnackbar open={open} setOpen={setOpen} />\n            <Grid item xs={12}>\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n                    {segment && segment.words.map((w) => w.value).join(\" \")}\n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n                        <MenuItem value=\"Income\">Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n                        {selectedCategories.map((selectedCategory) => (\n                            <MenuItem key={selectedCategory.type} value={selectedCategory.type}>\n                                {selectedCategory.type}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type=\"number\" value={formData.amount} label=\"Amount\" fullWidth onChange={(e) => setFormData({ ...formData, amount: e.target.value })}/>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type=\"date\" value={formData.date} label=\"Date\" fullWidth onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })}/>\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" color=\"primary\" onClick={addTransaction} fullWidth>Create</Button>\n        </Grid>\n    );\n};\n\nexport default Form;\n","/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/Form/style.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/List/List.jsx",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Main/List/style.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/context/context.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/context/contextReducer.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/constants/categories.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/utils/formatDate.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/useTransactions.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Snackbar/Snackbar.jsx",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/Snackbar/styles.js",[],"/Users/miugypig/Desktop/advance-tracker-react/advance-tracker/src/component/InforCard.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":74,"column":7,"nodeType":"89","endLine":74,"endColumn":16,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addTransaction', 'createTransaction', and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [addTransaction, createTransaction, formData, segment]",{"range":"96","text":"97"},[3025,3034],"[addTransaction, createTransaction, formData, segment]"]